buildscript {
    repositories {
        mavenCentral()
        jcenter()
        maven { url 'http://repo.spring.io/plugins-release' }
        maven { url 'https://plugins.gradle.org/m2/' }
    }
    dependencies {
        classpath 'org.springframework.boot:spring-boot-gradle-plugin:1.3.5.RELEASE'
        // TODO: find the best way for reloading, either springloaded or devtools
        classpath 'org.springframework:springloaded:1.2.6.RELEASE'
        classpath 'org.springframework.build.gradle:propdeps-plugin:0.0.7'
    }
}

plugins {
    id 'java'
    id 'idea'
    id 'findbugs'
    id 'pmd'
    id 'checkstyle'
    id 'io.spring.dependency-management' version '0.5.6.RELEASE'
    id 'com.gorylenko.gradle-git-properties' version '1.4.16'
    id 'org.hidetake.ssh' version '2.1.2'
    id 'com.ofg.uptodate' version '1.6.2'
}

apply plugin: 'propdeps'
apply plugin: 'spring-boot'

apply from: 'gradle/validation.gradle'
apply from: 'gradle/deploy.gradle'
apply from: 'gradle/extendedTests.gradle'

sourceCompatibility = 1.8

// TODO: enable when start working on client side
//sourceSets {
//    main {
//        resources.srcDir project(':frontend').buildDir
//    }
//}

gitProperties {
    keys = [
            'git.branch', 'git.commit.id', 'git.commit.id.abbrev', 'git.commit.user.name',
            'git.commit.user.email', 'git.commit.message.short', 'git.commit.message.full', 'git.commit.time'
    ]
}

processResources {
    filesMatching('**/application.properties') {
        expand(project.properties + project.rootProject.properties)
    }
}

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    compile 'io.springfox:springfox-swagger2:2.4.0'
    compile 'io.springfox:springfox-swagger-ui:2.4.0'
    compile 'org.springframework.boot:spring-boot-starter-web'
    compile 'org.springframework.boot:spring-boot-starter-security'
    compile 'org.springframework.boot:spring-boot-starter-actuator'
    compile 'org.springframework.boot:spring-boot-starter-hateoas'
    compile 'org.springframework.boot:spring-boot-starter-data-jpa'
    compile 'com.fasterxml.jackson.datatype:jackson-datatype-jdk7'
    compile 'com.fasterxml.jackson.datatype:jackson-datatype-jdk8'
    compile 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'
    compile 'org.projectlombok:lombok:1.16.8'
    optional 'org.springframework.boot:spring-boot-configuration-processor'
    // TODO: find the best way for reloading, either springloaded or devtools
    // optional 'org.springframework.boot:spring-boot-devtools'
    testCompile 'org.springframework.boot:spring-boot-starter-test'
    testCompile 'org.mockito:mockito-core'
    testCompile 'org.skyscreamer:jsonassert'
    e2eTestCompile 'org.seleniumhq.selenium:selenium-java:2.53.0'
    e2eTestCompile 'org.seleniumhq.selenium:htmlunit-driver:2.20'
    e2eTestCompile 'io.github.bonigarcia:webdrivermanager:1.4.3'
}

// TODO: enable when start working on client side
//compileJava.dependsOn(processResources)
//processResources.dependsOn tasks.getByPath(':frontend:assemble')
